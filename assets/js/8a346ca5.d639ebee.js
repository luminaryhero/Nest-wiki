"use strict";(self.webpackChunknest_wiki=self.webpackChunknest_wiki||[]).push([[8468],{8300:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(1527),o=s(7540);const i={title:"\u914d\u7f6e\u6a21\u5757(\u4e09)"},l=void 0,a={permalink:"/nest-wiki/blog/03",source:"@site/blog/03.md",title:"\u914d\u7f6e\u6a21\u5757(\u4e09)",description:"- [x] \u652f\u6301 YAML \u683c\u5f0f",date:"2023-12-27T09:46:40.000Z",formattedDate:"December 27, 2023",tags:[],readingTime:2.04,hasTruncateMarker:!1,authors:[],frontMatter:{title:"\u914d\u7f6e\u6a21\u5757(\u4e09)"},unlisted:!1,prevItem:{title:"\u6570\u636e\u5e93\u6a21\u5757(\u4e8c)",permalink:"/nest-wiki/blog/02"},nextItem:{title:"\u901a\u7528\u529f\u80fd\u5c01\u88c5(\u56db)",permalink:"/nest-wiki/blog/04"}},r={authorsImageUrls:[]},c=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u914d\u7f6e\u6a21\u5757",id:"\u914d\u7f6e\u6a21\u5757",level:2},{value:"\u652f\u6301 YAML \u683c\u5f0f",id:"\u652f\u6301-yaml-\u683c\u5f0f",level:3},{value:"\u652f\u6301\u591a\u73af\u5883",id:"\u652f\u6301\u591a\u73af\u5883",level:3},{value:"\u914d\u7f6e\u9a8c\u8bc1",id:"\u914d\u7f6e\u9a8c\u8bc1",level:3},{value:"\u5e94\u7528\u914d\u7f6e",id:"\u5e94\u7528\u914d\u7f6e",level:2}];function d(n){const e={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u652f\u6301 YAML \u683c\u5f0f"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u652f\u6301\u591a\u73af\u5883"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u914d\u7f6e\u9a8c\u8bc1"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"$ pnpm add @nestjs/config\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u914d\u7f6e\u6a21\u5757",children:"\u914d\u7f6e\u6a21\u5757"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"$ nest g mo configurations\n"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"configurations.module.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n  ],\n})\nexport class ConfigurationsModule {}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u652f\u6301-yaml-\u683c\u5f0f",children:"\u652f\u6301 YAML \u683c\u5f0f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"$ pnpm add js-yaml\n$ pnpm add -D @types/js-yaml\n"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"configurations.module.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'ConfigModule.forRoot({\n  isGlobal: true,\n  load: [\n    () =>\n      yaml.load(readFileSync(join(__dirname, "config.yaml"), "utf8")) as Record<\n        string,\n        any\n      >,\n  ],\n});\n'})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"nest.cli.json"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "$schema": "https://json.schemastore.org/nest-cli",\n  "collection": "@nestjs/schematics",\n  "sourceRoot": "src",\n  "compilerOptions": {\n    "assets": [\n      {\n        "include": "**/*.yaml",\n        "watchAssets": true\n      }\n    ],\n    "deleteOutDir": true\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u652f\u6301\u591a\u73af\u5883",children:"\u652f\u6301\u591a\u73af\u5883"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"$ pnpm add -D cross-env\n"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"configurations.module.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'ConfigModule.forRoot({\n  isGlobal: true,\n  load: [\n    () =>\n      yaml.load(\n        readFileSync(\n          join(\n            __dirname,\n            process.env.NODE_ENV === "production"\n              ? "config.prod.yaml"\n              : "config.yaml"\n          ),\n          "utf8"\n        )\n      ) as Record<string, any>,\n  ],\n});\n'})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"package.json"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'  "scripts": {\n    "build": "cross-env NODE_ENV=production nest build",\n    "format": "prettier --write \\"src/**/*.ts\\" \\"test/**/*.ts\\"",\n    "start": "cross-env NODE_ENV=development nest start",\n    "start:dev": "cross-env NODE_ENV=development nest start --watch",\n    "start:debug": "cross-env NODE_ENV=development nest start --debug --watch",\n    "start:prod": "cross-env NODE_ENV=production node dist/main",\n    "lint": "eslint \\"{src,apps,libs,test}/**/*.ts\\" --fix",\n  },\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u914d\u7f6e\u9a8c\u8bc1",children:"\u914d\u7f6e\u9a8c\u8bc1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"$ pnpm add joi\n"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"configurations/config.yaml"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'http:\n  host: "localhost"\n  port: 3100\n\ndb:\n  type: "mysql"\n  host: "localhost"\n  port: 3306\n  username: "root"\n  password: "12345678"\n  database: "test"\n  autoLoadEntities: true\n  synchronize: true\n'})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"configurations.module.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [\n        () =>\n          yaml.load(\n            readFileSync(\n              join(\n                __dirname,\n                process.env.NODE_ENV === "production"\n                  ? "config.prod.yaml"\n                  : "config.yaml"\n              ),\n              "utf8"\n            )\n          ) as Record<string, any>,\n      ],\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid("development", "production")\n          .default("development"),\n        http: Joi.object({\n          host: Joi.string(),\n          port: Joi.number(),\n        }),\n        db: Joi.object({\n          type: Joi.string().valid("mysql"),\n          host: Joi.string(),\n          port: Joi.number(),\n          username: Joi.string(),\n          password: Joi.string(),\n          database: Joi.string(),\n          autoLoadEntities: Joi.bool().valid(true),\n          synchronize: Joi.bool(),\n        }),\n      }),\n    }),\n  ],\n})\nexport class ConfigurationsModule {}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u5e94\u7528\u914d\u7f6e",children:"\u5e94\u7528\u914d\u7f6e"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"databases.module.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        config.get("db") as TypeOrmModuleOptions,\n    }),\n  ],\n})\nexport class DatabasesModule {}\n'})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"main.ts"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'import { NestFactory } from "@nestjs/core";\nimport { AppModule } from "./app.module";\nimport { ConfigService } from "@nestjs/config";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const config = app.get(ConfigService);\n  const host = config.get("http.host");\n  const port = config.get("http.port");\n  const url = `http://${host}:${port}`;\n\n  await app.listen(port, () => {\n    console.info(`APPLICATION STARTED AT ${url}`);\n  });\n}\nbootstrap();\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},7540:(n,e,s)=>{s.d(e,{Z:()=>a,a:()=>l});var t=s(959);const o={},i=t.createContext(o);function l(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:l(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);